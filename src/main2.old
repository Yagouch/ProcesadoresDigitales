#include<Arduino.h>

#include "Audio.h"
#include "SD.h"
#include "FS.h"
#include <WiFi.h>
#include <ESPAsyncWebServer.h>


// I/O SPI 
#define SD_CS         19
#define SPI_MOSI      23
#define SPI_MISO      5
#define SPI_SCK       18

// I/O I2S
#define I2S_DOUT      25
#define I2S_BCLK      27
#define I2S_LRC       26

const char* ssid = "MOVISTAR_D84E";
const char* password = ";9o2a3ei5RY#!:";

AsyncWebServer server(80);

Audio audio;

const int numSongs = 4;
const char* songFiles[numSongs] = {"/rock/ACDC-You_Shook_Me_All_Night_Long.mp3","/rock/JimiHendrix-All_Along_The_Watchtower.mp3","/rock/Kansas-Carry_On_Wayward_Son.mp3","/rock/TheBeatles-A_Day_In_The_Life.mp3"};
int SongIndex = 0;

void setup(){
Serial.begin(115200);
// ----------WEB----------

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Conectando a WiFi...");
  }

  Serial.println("Conectado a la red WiFi");
  Serial.print("Dirección IP: ");
  Serial.println(WiFi.localIP());

  server.on("/", HTTP_GET, [](AsyncWebServerRequest *request){
    String html = "<html><body>";
    html += "<h1>Control de musica</h1>";
    html += "<h4><strong>Se recomienda pausar antes de pasar de cancion</strong></h4>";
    html += "<button onclick=\"toggleMusic()\">Toggle Music</button>";
    html += "<button onclick=\"nextMusic()\">Next Music</button>";
    html += "<button onclick=\"previousMusic()\">Previous Music</button>";
    
    // Generar la lista de canciones en la página
    html += "<ul>";
    for (int i = 0; i < numSongs; i++) {
      html += "<li>";
      html += songFiles[i];
      html += "</li>";
    }
    html += "</ul>";

    html += "<script>function toggleMusic() {var xhr = new XMLHttpRequest(); xhr.open('GET', '/toggle', true); xhr.send();}";
    html += "function nextMusic() {var xhr = new XMLHttpRequest(); xhr.open('GET', '/next', true); xhr.send();}";
    html += "function previousMusic() {var xhr = new XMLHttpRequest(); xhr.open('GET', '/previous', true); xhr.send();}</script>";
    html += "</body></html>";
    request->send(200, "text/html", html);
  });

  server.on("/toggle", HTTP_GET, [](AsyncWebServerRequest *request){
    audio.pauseResume();
    request->send(200);
  });
  server.on("/next", HTTP_GET, [](AsyncWebServerRequest *request){
    audio.pauseResume();
    SongIndex++;
    if (SongIndex>=numSongs) SongIndex=0;
    audio.connecttoFS(SD, songFiles[SongIndex]);
    request->send(200);
  });
  server.on("/previous", HTTP_GET, [](AsyncWebServerRequest *request){
    audio.pauseResume();
    SongIndex--;
    if (SongIndex<0) SongIndex=numSongs-1;
    audio.connecttoFS(SD, songFiles[SongIndex]);
    request->send(200);
  });

  server.begin();



pinMode(SD_CS, OUTPUT);
digitalWrite(SD_CS, HIGH);
SPI.begin(SPI_SCK, SPI_MISO, SPI_MOSI);
SD.begin(SD_CS);
audio.setPinout(I2S_BCLK, I2S_LRC, I2S_DOUT);
audio.setVolume(10); // 0...21


audio.connecttoFS(SD, songFiles[SongIndex]);


}

void loop(){

audio.loop();

}
